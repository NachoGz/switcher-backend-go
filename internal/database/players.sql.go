// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: players.sql

package database

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
)

const createPlayer = `-- name: CreatePlayer :one
INSERT INTO players (id, name, turn, game_id, game_state_id, host)
VALUES ($1, $2, $3, $4, $5, $6)
RETURNING id, name, turn, game_id, game_state_id, host, winner, created_at, update_at
`

type CreatePlayerParams struct {
	ID          uuid.UUID
	Name        string
	Turn        sql.NullString
	GameID      uuid.NullUUID
	GameStateID uuid.NullUUID
	Host        bool
}

func (q *Queries) CreatePlayer(ctx context.Context, arg CreatePlayerParams) (Player, error) {
	row := q.db.QueryRowContext(ctx, createPlayer,
		arg.ID,
		arg.Name,
		arg.Turn,
		arg.GameID,
		arg.GameStateID,
		arg.Host,
	)
	var i Player
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Turn,
		&i.GameID,
		&i.GameStateID,
		&i.Host,
		&i.Winner,
		&i.CreatedAt,
		&i.UpdateAt,
	)
	return i, err
}
