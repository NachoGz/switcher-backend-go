// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: game_state.sql

package database

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
)

const createGameState = `-- name: CreateGameState :one
INSERT INTO game_state (id, state, game_id, current_player_id, forbidden_color)
VALUES ($1, $2, $3, $4, $5)
RETURNING id, state, game_id, current_player_id, forbidden_color, created_at, updated_at
`

type CreateGameStateParams struct {
	ID              uuid.UUID
	State           string
	GameID          uuid.NullUUID
	CurrentPlayerID uuid.NullUUID
	ForbiddenColor  sql.NullString
}

func (q *Queries) CreateGameState(ctx context.Context, arg CreateGameStateParams) (GameState, error) {
	row := q.db.QueryRowContext(ctx, createGameState,
		arg.ID,
		arg.State,
		arg.GameID,
		arg.CurrentPlayerID,
		arg.ForbiddenColor,
	)
	var i GameState
	err := row.Scan(
		&i.ID,
		&i.State,
		&i.GameID,
		&i.CurrentPlayerID,
		&i.ForbiddenColor,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
